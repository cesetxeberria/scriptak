---
- name: Datubasea instalatu.
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - mariadb-server
    - python3-pymysql

- name: mariadb-server zerbitzua abiarazi.
  service:
    name: mariadb
    state: started

- name: update mysql root password for all root accounts from local servers
  mysql_user: 
    login_unix_socket: /var/run/mysqld/mysqld.sock
    name: root 
    host_all: yes    
    password: "{{ pasahitzaroot }}"
    priv: "*.*:ALL,GRANT"

- name: copy .my.cnf file with root password credentials
  template: 
    src: "{{ role_path }}/templates/my.cnf.j2"
    dest: "/root/.my.cnf"
    owner: root 
    mode: 0600

- name: delete anonymous MySQL server user
  mysql_user: 
    user: ""
    host_all: yes    
    state: "absent"

- name: remove the MySQL test database
  mysql_db: 
    db: test 
    state: absent

#CREATE DATABASE databasearenizena;
- name: Datubasea sortu
  mysql_db:
    name: "{{ databasearenizena }}"
    state: present

#GRANT ALL PRIVILEGES ON databasearenizena.* TO 'erabiltzailea'@'localhost' IDENTIFIED BY 'pasahitza';
- name: Erabiltzailea sortu eta datubasea kudeatzeko baimena eman
  mysql_user:
    name: "{{ erabiltzailea }}"
    password: "{{ pasahitza }}"
    priv: "ocsweb.*:ALL,GRANT"
    state: present

#FLUSH PRIVILEGES;

- name: Zerbitzaria instalatu.
  apt:
    name: ocsinventory-server

- name: ocs konfiguratu.
  replace:
    dest: /etc/apache2/conf-available/ocsinventory-server.conf
    regexp: "{{ item.bat }}"
    replace: "{{ item.bi }}"
#    backrefs: yes
  with_items:
     - { bat: 'PerlSetEnv OCS_DB_NAME ocsweb', bi: 'PerlSetEnv OCS_DB_NAME ocsdb' }
     - { bat: 'PerlSetEnv OCS_DB_LOCAL ocsweb', bi: 'PerlSetEnv OCS_DB_LOCAL ocsdb' }
     - { bat: 'PerlSetEnv OCS_DB_USER ocs', bi: 'PerlSetEnv OCS_DB_USER ocsreports' }
     - { bat: 'PerlSetVar OCS_DB_PWD ocs', bi: 'PerlSetVar OCS_DB_PWD ocsreports' }
