#live sistema prestatu
---
- name: networking.service eta ifup@.service karpetak sortu.
  file:
    path: "{{ item }}"
    state: directory
  with_items:
    - "/etc/systemd/system/ifup@.service.d/"
    - "/etc/systemd/system/networking.service.d/"
  when: ansible_distribution == 'Debian'

- name: Itzali aurretik sarea ez kendu.
  copy:
    src: "{{ role_path }}/files/etc/systemd/system/networking.service.d/override.conf"
    dest: "{{ item }}"
    mode: 0644
  with_items:
    - "/etc/systemd/system/networking.service.d/override.conf"
    - "/etc/systemd/system/ifup@.service.d/override.conf"
  when: ansible_distribution == 'Debian'

- name: Gure scriptak kopiatu
  copy:
    src: "{{ role_path }}/files/usr/local/bin/{{ item }}"
    dest: "/usr/local/bin/{{ item }}"
    mode: 0755
  with_items:
     - gethardinfo
     - getnamebymac
     - mute
     - unmute
     - wifion
     - kendui386
     - update_hosts
     - disableswap

- name: Gure zerbitzuak kopiatu.
  copy:
    src: "{{ role_path }}/files/{{ item }}"
    dest: "/{{ item }}"
    mode: 0644
  with_items:
    - "etc/systemd/system/getnamebymac.service"
    - "etc/systemd/system/swapiness.service"

- name: Gure zerbitzuak aktibatu.
  file:
    src: /etc/systemd/system/{{ item }}
    dest: /etc/systemd/system/multi-user.target.wants/{{ item }}
    state: link
  with_items:
    - "getnamebymac.service"
    - "swapiness.service"

- name: Systemd egunerokoa ez gorde.
  replace:
    dest: /etc/systemd/journald.conf
    regexp: '#Storage=auto'
    replace: 'Storage=none'

- name: auto update kendu
  file:
    path: /etc/systemd/system/timers.target.wants/apt-daily.timer
    state: absent

- name: auto upgrade kendu
  file:
    path: /etc/systemd/system/timers.target.wants/apt-daily-upgrade.timer
    state: absent

#ln -s /lib/systemd/system/apt-daily.timer /etc/systemd/system/timers.target.wants/apt-daily.timer
#ln -s /lib/systemd/system/apt-daily-upgrade.timer /etc/systemd/system/timers.target.wants/apt-daily-upgrade.timer

- name: Grub konfiguratu.
  replace:
    dest: /etc/default/grub
    regexp: "{{ item.old }}"
    replace: "{{ item.new }}"
#    backrefs: yes
  with_items:
     - { old: 'GRUB_TIMEOUT=5', new: 'GRUB_TIMEOUT=2' }
     - { old: 'GRUB_CMDLINE_LINUX_DEFAULT="quiet"', new: 'GRUB_CMDLINE_LINUX_DEFAULT=""' }
#     - { old: '#GRUB_DISABLE_OS_PROBER=false', new: 'GRUB_DISABLE_OS_PROBER=false' }

- name: Instalatzaileak kopiatu
  copy:
    src: "{{ role_path }}/files/usr/local/sbin/{{ item }}"
    dest: "/usr/local/sbin/{{ item }}"
    mode: 0755
  with_items:
     - formatalllive
     - format_newinstall
     - format_update
     - format_chromeos

- name: Copy basic syslinux_local.cfg and grub.cfg
  copy:
    src: "{{ role_path }}/files/root/{{ item }}"
    dest: "/root/{{ item }}"
    mode: 0644
  with_items:
     - syslinux_local.cfg
     - syslinux_live.cfg
     - grub.cfg

- name: Instalatu programa extra batzuk.
  apt:
    name: "{{ packages }}"
    install_recommends: no
  vars:
    packages:
    - live-boot
    - syslinux
    - syslinux-common
    - syslinux-efi
    - extlinux
    - pv
    - squashfs-tools
    - parted
    - haveged
    - clonezilla
    - partclone
    - zstd
    - btrfs-progs
    - libncurses-dev

- name: Sortu clonezilla-rentzako karpeta
  file:
    path: /home/partimag
    state: directory
    mode: 0755

- name: Grub instalatu.
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - grub-pc

- name: Grub instalatu EFI
  apt:
    name: "{{ packages }}"
  vars:
    packages:
    - grub-efi-amd64-signed
  when: ansible_architecture == 'amd64'
